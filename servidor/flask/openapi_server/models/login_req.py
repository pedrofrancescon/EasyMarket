# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.login import Login
from openapi_server import util

from openapi_server.models.login import Login  # noqa: E501

class LoginReq(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, login=None):  # noqa: E501
        """LoginReq - a model defined in OpenAPI

        :param login: The login of this LoginReq.  # noqa: E501
        :type login: Login
        """
        self.openapi_types = {
            'login': Login
        }

        self.attribute_map = {
            'login': 'login'
        }

        self._login = login

    @classmethod
    def from_dict(cls, dikt) -> 'LoginReq':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LoginReq of this LoginReq.  # noqa: E501
        :rtype: LoginReq
        """
        return util.deserialize_model(dikt, cls)

    @property
    def login(self):
        """Gets the login of this LoginReq.


        :return: The login of this LoginReq.
        :rtype: Login
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this LoginReq.


        :param login: The login of this LoginReq.
        :type login: Login
        """
        if login is None:
            raise ValueError("Invalid value for `login`, must not be `None`")  # noqa: E501

        self._login = login
