# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.vesttype import Vesttype
from openapi_server import util

from openapi_server.models.vesttype import Vesttype  # noqa: E501

class PurchaseStartReq(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qr_code=None, vest_type=None):  # noqa: E501
        """PurchaseStartReq - a model defined in OpenAPI

        :param qr_code: The qr_code of this PurchaseStartReq.  # noqa: E501
        :type qr_code: str
        :param vest_type: The vest_type of this PurchaseStartReq.  # noqa: E501
        :type vest_type: Vesttype
        """
        self.openapi_types = {
            'qr_code': str,
            'vest_type': Vesttype
        }

        self.attribute_map = {
            'qr_code': 'qr_code',
            'vest_type': 'VestType'
        }

        self._qr_code = qr_code
        self._vest_type = vest_type

    @classmethod
    def from_dict(cls, dikt) -> 'PurchaseStartReq':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PurchaseStartReq of this PurchaseStartReq.  # noqa: E501
        :rtype: PurchaseStartReq
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qr_code(self):
        """Gets the qr_code of this PurchaseStartReq.

        Cart qr_code  # noqa: E501

        :return: The qr_code of this PurchaseStartReq.
        :rtype: str
        """
        return self._qr_code

    @qr_code.setter
    def qr_code(self, qr_code):
        """Sets the qr_code of this PurchaseStartReq.

        Cart qr_code  # noqa: E501

        :param qr_code: The qr_code of this PurchaseStartReq.
        :type qr_code: str
        """
        if qr_code is None:
            raise ValueError("Invalid value for `qr_code`, must not be `None`")  # noqa: E501

        self._qr_code = qr_code

    @property
    def vest_type(self):
        """Gets the vest_type of this PurchaseStartReq.


        :return: The vest_type of this PurchaseStartReq.
        :rtype: Vesttype
        """
        return self._vest_type

    @vest_type.setter
    def vest_type(self, vest_type):
        """Sets the vest_type of this PurchaseStartReq.


        :param vest_type: The vest_type of this PurchaseStartReq.
        :type vest_type: Vesttype
        """
        if vest_type is None:
            raise ValueError("Invalid value for `vest_type`, must not be `None`")  # noqa: E501

        self._vest_type = vest_type
